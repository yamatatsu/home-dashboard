// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WebApi Stack 1`] = `
Object {
  "Resources": Object {
    "Authorizer": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "AuthorizerPayloadFormatVersion": "2.0",
        "AuthorizerResultTtlInSeconds": 4,
        "AuthorizerType": "REQUEST",
        "AuthorizerUri": Object {
          "Fn::Sub": Array [
            "arn:aws:apigateway:\${region}:lambda:path/2015-03-31/functions/\${fnArn}/invocations",
            Object {
              "fnArn": Object {
                "Fn::GetAtt": Array [
                  "authorize0036E950",
                  "Arn",
                ],
              },
              "region": Object {
                "Ref": "AWS::Region",
              },
            },
          ],
        },
        "EnableSimpleResponses": true,
        "IdentitySource": Array [
          "$request.header.x-hd-auth",
        ],
        "Name": "HomeDashboardAuthorizer",
      },
      "Type": "AWS::ApiGatewayV2::Authorizer",
    },
    "HttpApiDefaultStage3EEB07D6": Object {
      "Properties": Object {
        "AccessLogSettings": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "apiLogGroupC7068A49",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"requestTime\\":\\"$context.requestTimeEpoch\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"path\\":\\"$context.path\\",\\"routeKey\\":\\"$context.routeKey\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\",\\"responseLatency\\":\\"$context.responseLatency\\",\\"authorizer.error\\":\\"$context.authorizer.error\\",\\"authorizer.principalId\\":\\"$context.authorizer.principalId\\",\\"error.message\\":\\"$context.error.message\\",\\"error.messageString\\":\\"$context.error.messageString\\",\\"error.responseType\\":\\"$context.error.responseType\\",\\"integration.error\\":\\"$context.integration.error\\",\\"integration.integrationStatus\\":\\"$context.integration.integrationStatus\\",\\"integration.latency\\":\\"$context.integration.latency\\",\\"integration.requestId\\":\\"$context.integration.requestId\\",\\"integration.status\\":\\"$context.integration.status\\"}",
        },
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "HttpApiF5A9A8A7": Object {
      "Properties": Object {
        "CorsConfiguration": Object {
          "AllowCredentials": true,
          "AllowHeaders": Array [
            "content-type",
            "x-hd-auth",
          ],
          "AllowMethods": Array [
            "GET",
            "POST",
          ],
          "AllowOrigins": Array [
            "test-allowOrigins",
          ],
        },
        "Name": "HomeDashboard-WebApi",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "HttpApiGETremoEventsDA5CD001": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "Authorizer",
        },
        "RouteKey": "GET /remoEvents",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "HttpApiGETremoEventsGETremoEventsIntegration3B174E92",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "HttpApiGETremoEventsGETremoEventsIntegration3B174E92": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "getRemoEventsE86B84DD",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "HttpApiGETremoEventsTargetHttpApiGETremoEvents6458946CPermission193774D6": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "getRemoEventsE86B84DD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "HttpApiF5A9A8A7",
              },
              "/*/*/remoEvents",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "HttpApiPOSTauthsignIn1C78838F": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "RouteKey": "POST /auth/signIn",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "HttpApiPOSTauthsignInPOSTauthsignInIntegration92E7A2D7",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "HttpApiPOSTauthsignInChallengeBEAE4341": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "RouteKey": "POST /auth/signInChallenge",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "HttpApiPOSTauthsignInChallengePOSTauthsignInChallengeIntegrationCB941692",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "HttpApiPOSTauthsignInChallengePOSTauthsignInChallengeIntegrationCB941692": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "signInChallenge928536FE",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "HttpApiPOSTauthsignInChallengeTargetHttpApiPOSTauthsignInChallengeF386A038Permission7F2D1FB3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "signInChallenge928536FE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "HttpApiF5A9A8A7",
              },
              "/*/*/auth/signInChallenge",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "HttpApiPOSTauthsignInPOSTauthsignInIntegration92E7A2D7": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "signInFB14E69C",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "HttpApiPOSTauthsignInTargetHttpApiPOSTauthsignIn59380A31Permission1B78D519": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "signInFB14E69C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "HttpApiF5A9A8A7",
              },
              "/*/*/auth/signIn",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "HttpApiPOSTauthsignUp853A73FF": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "RouteKey": "POST /auth/signUp",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "HttpApiPOSTauthsignUpPOSTauthsignUpIntegration1BD19CA0",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "HttpApiPOSTauthsignUpChallengeE256B5D4": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "RouteKey": "POST /auth/signUpChallenge",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "HttpApiPOSTauthsignUpChallengePOSTauthsignUpChallengeIntegrationACC93027",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "HttpApiPOSTauthsignUpChallengePOSTauthsignUpChallengeIntegrationACC93027": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "signUpChallengeE4AB8E64",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "HttpApiPOSTauthsignUpChallengeTargetHttpApiPOSTauthsignUpChallengeFFBEDB3EPermission32C7F8EF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "signUpChallengeE4AB8E64",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "HttpApiF5A9A8A7",
              },
              "/*/*/auth/signUpChallenge",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "HttpApiPOSTauthsignUpPOSTauthsignUpIntegration1BD19CA0": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "signUp5E93447F",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "HttpApiPOSTauthsignUpTargetHttpApiPOSTauthsignUp53F86822Permission212DB179": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "signUp5E93447F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "HttpApiF5A9A8A7",
              },
              "/*/*/auth/signUp",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "apiLogGroupC7068A49": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "authorize0036E950": Object {
      "DependsOn": Array [
        "authorizeServiceRoleDefaultPolicy9C5FA925",
        "authorizeServiceRole2BB3673D",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "xxx",
        },
        "Environment": Object {
          "Variables": Object {
            "AUTH_TABLE_NAME": Object {
              "Fn::ImportValue": "test-stack:ExportsOutputReftestauthTableA16FCBE8A9D00965",
            },
          },
        },
        "FunctionName": "HomeDashboard-authorize",
        "Handler": "index.authorize",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "authorizeServiceRole2BB3673D",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 4,
      },
      "Type": "AWS::Lambda::Function",
    },
    "authorizeServiceRole2BB3673D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "authorizeServiceRoleDefaultPolicy9C5FA925": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::ImportValue": "test-stack:ExportsOutputFnGetAtttestauthTableA16FCBE8Arn76F77019",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "authorizeServiceRoleDefaultPolicy9C5FA925",
        "Roles": Array [
          Object {
            "Ref": "authorizeServiceRole2BB3673D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "authorizeauthorizeremoEventsPermissionC9A2CC92": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "authorize0036E950",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "HttpApiF5A9A8A7",
              },
              "/authorizers/",
              Object {
                "Ref": "Authorizer",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "getRemoEventsE86B84DD": Object {
      "DependsOn": Array [
        "getRemoEventsServiceRoleDefaultPolicy4F9635B2",
        "getRemoEventsServiceRole8A397E3D",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "xxx",
        },
        "Environment": Object {
          "Variables": Object {
            "MAIN_TABLE_NAME": Object {
              "Fn::ImportValue": "test-stack:ExportsOutputReftestmainTable49DACA37A1DA94DB",
            },
          },
        },
        "FunctionName": "HomeDashboard-getRemoEvents",
        "Handler": "index.getRemoEvents",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "getRemoEventsServiceRole8A397E3D",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 4,
      },
      "Type": "AWS::Lambda::Function",
    },
    "getRemoEventsServiceRole8A397E3D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "getRemoEventsServiceRoleDefaultPolicy4F9635B2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::ImportValue": "test-stack:ExportsOutputFnGetAtttestmainTable49DACA37ArnF6586204",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "getRemoEventsServiceRoleDefaultPolicy4F9635B2",
        "Roles": Array [
          Object {
            "Ref": "getRemoEventsServiceRole8A397E3D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "signInChallenge928536FE": Object {
      "DependsOn": Array [
        "signInChallengeServiceRoleDefaultPolicyF579EDE2",
        "signInChallengeServiceRole2F9BFBDB",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "xxx",
        },
        "Environment": Object {
          "Variables": Object {
            "AUTH_TABLE_NAME": Object {
              "Fn::ImportValue": "test-stack:ExportsOutputReftestauthTableA16FCBE8A9D00965",
            },
          },
        },
        "FunctionName": "HomeDashboard-signInChallenge",
        "Handler": "index.signInChallenge",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "signInChallengeServiceRole2F9BFBDB",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 4,
      },
      "Type": "AWS::Lambda::Function",
    },
    "signInChallengeServiceRole2F9BFBDB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "signInChallengeServiceRoleDefaultPolicyF579EDE2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::ImportValue": "test-stack:ExportsOutputFnGetAtttestauthTableA16FCBE8Arn76F77019",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "signInChallengeServiceRoleDefaultPolicyF579EDE2",
        "Roles": Array [
          Object {
            "Ref": "signInChallengeServiceRole2F9BFBDB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "signInFB14E69C": Object {
      "DependsOn": Array [
        "signInServiceRoleDefaultPolicy62723471",
        "signInServiceRoleA1955DB5",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "xxx",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOW_ORIGINS": "test-allowOrigins",
            "AUTH_TABLE_NAME": Object {
              "Fn::ImportValue": "test-stack:ExportsOutputReftestauthTableA16FCBE8A9D00965",
            },
            "RP_ID": "test-rpId",
          },
        },
        "FunctionName": "HomeDashboard-signIn",
        "Handler": "index.signIn",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "signInServiceRoleA1955DB5",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 4,
      },
      "Type": "AWS::Lambda::Function",
    },
    "signInServiceRoleA1955DB5": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "signInServiceRoleDefaultPolicy62723471": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::ImportValue": "test-stack:ExportsOutputFnGetAtttestauthTableA16FCBE8Arn76F77019",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "signInServiceRoleDefaultPolicy62723471",
        "Roles": Array [
          Object {
            "Ref": "signInServiceRoleA1955DB5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "signUp5E93447F": Object {
      "DependsOn": Array [
        "signUpServiceRoleDefaultPolicy866220C7",
        "signUpServiceRole353D824C",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "xxx",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOW_ORIGINS": "test-allowOrigins",
            "AUTH_TABLE_NAME": Object {
              "Fn::ImportValue": "test-stack:ExportsOutputReftestauthTableA16FCBE8A9D00965",
            },
            "RP_ID": "test-rpId",
          },
        },
        "FunctionName": "HomeDashboard-signUp",
        "Handler": "index.signUp",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "signUpServiceRole353D824C",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 4,
      },
      "Type": "AWS::Lambda::Function",
    },
    "signUpChallengeE4AB8E64": Object {
      "DependsOn": Array [
        "signUpChallengeServiceRoleDefaultPolicy427FF7AA",
        "signUpChallengeServiceRoleA12993EA",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "xxx",
        },
        "Environment": Object {
          "Variables": Object {
            "AUTH_TABLE_NAME": Object {
              "Fn::ImportValue": "test-stack:ExportsOutputReftestauthTableA16FCBE8A9D00965",
            },
          },
        },
        "FunctionName": "HomeDashboard-signUpChallenge",
        "Handler": "index.signUpChallenge",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "signUpChallengeServiceRoleA12993EA",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 4,
      },
      "Type": "AWS::Lambda::Function",
    },
    "signUpChallengeServiceRoleA12993EA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "signUpChallengeServiceRoleDefaultPolicy427FF7AA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::ImportValue": "test-stack:ExportsOutputFnGetAtttestauthTableA16FCBE8Arn76F77019",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "signUpChallengeServiceRoleDefaultPolicy427FF7AA",
        "Roles": Array [
          Object {
            "Ref": "signUpChallengeServiceRoleA12993EA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "signUpServiceRole353D824C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "signUpServiceRoleDefaultPolicy866220C7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::ImportValue": "test-stack:ExportsOutputFnGetAtttestauthTableA16FCBE8Arn76F77019",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "signUpServiceRoleDefaultPolicy866220C7",
        "Roles": Array [
          Object {
            "Ref": "signUpServiceRole353D824C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
